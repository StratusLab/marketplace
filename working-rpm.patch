From b9fbf097d073f32f2f66510ba31c919c0d0a86f0 Mon Sep 17 00:00:00 2001
From: Charles LOOMIS <loomis@lal.in2p3.fr>
Date: Fri, 15 Apr 2011 13:03:47 +0200
Subject: [PATCH 1/2] working version

---
 server/jetty-rpm/pom.xml                           |  405 ++++++++-------
 .../jetty-config/contexts/jetty-marketplace.xml    |   25 +
 .../src/main/jetty-config/etc/jetty-stratuslab.xml |    6 +-
 server/jetty-rpm/src/main/jetty-config/start.ini   |    2 +-
 .../src/main/scripts/generate-jetty-certificate.sh |   71 +++
 server/jetty-rpm/src/main/scripts/marketplace      |  555 ++++++++++++++++++++
 6 files changed, 876 insertions(+), 188 deletions(-)
 create mode 100644 server/jetty-rpm/src/main/jetty-config/contexts/jetty-marketplace.xml
 create mode 100755 server/jetty-rpm/src/main/scripts/generate-jetty-certificate.sh
 create mode 100755 server/jetty-rpm/src/main/scripts/marketplace

diff --git a/server/jetty-rpm/pom.xml b/server/jetty-rpm/pom.xml
index 326611a..cd9e0e6 100644
--- a/server/jetty-rpm/pom.xml
+++ b/server/jetty-rpm/pom.xml
@@ -1,186 +1,225 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-	<modelVersion>4.0.0</modelVersion>
-
-	<groupId>eu.stratuslab.marketplace.server</groupId>
-	<artifactId>server-rpm</artifactId>
-	<version>0.0.6-SNAPSHOT</version>
-	<name>StratusLab Marketplace (Jetty) Packaging</name>
-
-	<packaging>rpm</packaging>
-
-	<parent>
-		<groupId>eu.stratuslab.marketplace</groupId>
-		<artifactId>server</artifactId>
-		<version>0.0.6-SNAPSHOT</version>
-	</parent>
-
-	<dependencies>
-		<dependency>
-			<groupId>eu.stratuslab.marketplace</groupId>
-			<artifactId>stratuslab-marketplace</artifactId>
-			<type>war</type>
-			<version>0.0.6-SNAPSHOT</version>
-		</dependency>
-	</dependencies>
-
-	<!-- NOTE: This project MUST have same version as proxy module. --><!-- <properties> <stratuslab-marketplace-war>stratuslab-marketplace-${project.version}.war</stratuslab-marketplace-war> 
-		<maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format> 
-		<RELEASE>0.${maven.build.timestamp}</RELEASE> </properties> -->
-	<build>
-
-		<plugins>
-
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-resources-plugin</artifactId>
-
-				<executions>
-					<execution>
-						<id>filter-jetty-configs</id>
-						<goals>
-							<goal>copy-resources</goal>
-						</goals>
-						<phase>process-resources</phase>
-						<configuration>
-							<outputDirectory>${basedir}/target/jetty-config</outputDirectory>
-							<resources>
-								<resource>
-									<directory>${basedir}/src/main/jetty-config</directory>
-									<filtering>true</filtering>
-								</resource>
-							</resources>
-						</configuration>
-					</execution>
-				</executions>
-			</plugin>
-
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-dependency-plugin</artifactId>
-
-				<executions>
-
-					<execution>
-						<id>unpack-jetty</id>
-						<goals>
-							<goal>unpack</goal>
-						</goals>
-						<configuration>
-							<artifactItems>
-								<artifactItem>
-									<groupId>org.eclipse.jetty</groupId>
-									<artifactId>jetty-distribution</artifactId>
-									<version>${jetty.version}</version>
-									<type>tar.gz</type>
-								</artifactItem>
-							</artifactItems>
-						</configuration>
-					</execution>
-
-					<execution>
-						<id>copy-war</id>
-						<goals>
-							<goal>copy</goal>
-						</goals>
-						<configuration>
-							<outputDirectory>${project.build.directory}/dependency/webapps</outputDirectory>
-							<artifactItems>
-								<artifactItem>
-									<groupId>eu.stratuslab.marketplace</groupId>
-									<artifactId>stratuslab-marketplace</artifactId>
-									<type>war</type>
-								</artifactItem>
-							</artifactItems>
-						</configuration>
-					</execution>
-
-				</executions>
-
-			</plugin>
-
-			<plugin>
-				<groupId>org.codehaus.mojo</groupId>
-				<artifactId>rpm-maven-plugin</artifactId>
-				<extensions>true</extensions>
-				<configuration>
-					<release>${RELEASE}</release>
-					<summary>StratusLab Marketplace (Jetty) Package</summary>
-					<name>stratuslab-marketplace</name>
-					<group>System</group>
-					<vendor>StratusLab</vendor>
-					<packager>StratusLab</packager>
-					<copyright>Apache</copyright>
-					<url>http://www.stratuslab.eu/</url>
-					<needarch>noarch</needarch>
-					<description>
-						Jetty packaging that includes StratusLab Marketplace Server. 
-					</description>
-					<requires>
-						<require>java</require>
-					</requires>
-					<mappings>
-
-						<mapping>
-							<directory>/opt/jetty-7/webapps</directory>
-							<filemode>644</filemode>
-							<username>root</username>
-							<groupname>root</groupname>
-							<directoryIncluded>false</directoryIncluded>
-							<sources>
-								<source>
-									<location>target/dependency/webapps/</location>
-									<includes>
-										<include>*.war</include>
-									</includes>
-								</source>
-							</sources>
-						</mapping>
-
-						<mapping>
-							<directory>/opt/jetty-7/</directory>
-							<filemode>644</filemode>
-							<username>root</username>
-							<groupname>root</groupname>
-							<directoryIncluded>false</directoryIncluded>
-							<sources>
-								<source>
-									<location>target/dependency/jetty-distribution-${jetty.version}/</location>
-									<includes>
-										<include>*.txt</include>
-										<include>*.html</include>
-										<include>start.jar</include>
-										<include>etc/**/*</include>
-										<include>lib/**/*</include>
-										<include>logs/**/*</include>
-										<include>contexts/README.txt</include>
-									</includes>
-								</source>
-							</sources>
-						</mapping>
-
-						<mapping>
-							<directory>/etc/rc.d/init.d/</directory>
-							<filemode>755</filemode>
-							<username>root</username>
-							<groupname>root</groupname>
-							<directoryIncluded>false</directoryIncluded>
-							<sources>
-								<source>
-									<location>src/main/scripts</location>
-									<includes>
-										<include>jetty</include>
-									</includes>
-								</source>
-							</sources>
-						</mapping>
-
-					</mappings>
-				</configuration>
-			</plugin>
-
-		</plugins>
-
-	</build>
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+
+  <groupId>eu.stratuslab.marketplace.server</groupId>
+  <artifactId>server-rpm</artifactId>
+  <version>0.0.6-SNAPSHOT</version>
+  <name>StratusLab Marketplace (Jetty) Packaging</name>
+
+  <packaging>rpm</packaging>
+
+  <parent>
+    <groupId>eu.stratuslab.marketplace</groupId>
+    <artifactId>server</artifactId>
+    <version>0.0.6-SNAPSHOT</version>
+  </parent>
+
+  <dependencies>
+    <dependency>
+      <groupId>eu.stratuslab.marketplace</groupId>
+      <artifactId>stratuslab-marketplace</artifactId>
+      <type>war</type>
+      <version>0.0.6-SNAPSHOT</version>
+    </dependency>
+  </dependencies>
+  
+  <properties> 
+    <installation.dir>/opt/stratuslab/marketplace</installation.dir>
+    <marketplace-war>stratuslab-marketplace-${project.version}.war</marketplace-war>
+    <maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format> 
+    <RELEASE>0.${maven.build.timestamp}</RELEASE>
+  </properties>
+  <build>
+    
+    <plugins>
+
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-resources-plugin</artifactId>
+
+        <executions>
+          <execution>
+            <id>filter-jetty-configs</id>
+            <goals>
+              <goal>copy-resources</goal>
+            </goals>
+            <phase>process-resources</phase>
+            <configuration>
+              <outputDirectory>${basedir}/target/jetty-config</outputDirectory>
+              <resources>
+                <resource>
+                  <directory>${basedir}/src/main/jetty-config</directory>
+                  <filtering>true</filtering>
+                </resource>
+              </resources>
+            </configuration>
+          </execution>
+        </executions>
+      </plugin>
+
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-dependency-plugin</artifactId>
+
+        <executions>
+
+          <execution>
+            <id>unpack-jetty</id>
+            <goals>
+              <goal>unpack</goal>
+            </goals>
+            <configuration>
+              <artifactItems>
+                <artifactItem>
+                  <groupId>org.eclipse.jetty</groupId>
+                  <artifactId>jetty-distribution</artifactId>
+                  <version>${jetty.version}</version>
+                  <type>tar.gz</type>
+                </artifactItem>
+              </artifactItems>
+            </configuration>
+          </execution>
+
+          <execution>
+            <id>copy-war</id>
+            <goals>
+              <goal>copy</goal>
+            </goals>
+            <configuration>
+              <outputDirectory>${project.build.directory}/dependency/webapps</outputDirectory>
+              <artifactItems>
+                <artifactItem>
+                  <groupId>eu.stratuslab.marketplace</groupId>
+                  <artifactId>stratuslab-marketplace</artifactId>
+                  <type>war</type>
+                </artifactItem>
+              </artifactItems>
+            </configuration>
+          </execution>
+
+        </executions>
+
+      </plugin>
+
+      <plugin>
+        <groupId>org.codehaus.mojo</groupId>
+        <artifactId>rpm-maven-plugin</artifactId>
+        <extensions>true</extensions>
+        <configuration>
+          <release>${RELEASE}</release>
+          <summary>StratusLab Marketplace (Jetty) Package</summary>
+          <name>stratuslab-marketplace</name>
+          <group>System</group>
+          <vendor>StratusLab</vendor>
+          <packager>StratusLab</packager>
+          <copyright>Apache</copyright>
+          <url>http://www.stratuslab.eu/</url>
+          <needarch>noarch</needarch>
+          <description>
+            Jetty packaging that includes StratusLab Marketplace Server. 
+          </description>
+          <requires>
+            <require>java</require>
+          </requires>
+          <mappings>
+
+            <mapping>
+              <directory>${installation.dir}/webapps</directory>
+              <filemode>644</filemode>
+              <username>root</username>
+              <groupname>root</groupname>
+              <directoryIncluded>false</directoryIncluded>
+              <sources>
+                <source>
+                  <location>target/dependency/webapps/</location>
+                  <includes>
+                    <include>*.war</include>
+                  </includes>
+                </source>
+              </sources>
+            </mapping>
+
+	    <mapping>
+	      <directory>${installation.dir}/etc</directory>
+	      <filemode>755</filemode>
+	      <username>root</username>
+	      <groupname>root</groupname>
+	      <directoryIncluded>false</directoryIncluded>
+	      <sources>
+		<source>
+		  <location>src/main/scripts</location>
+		  <includes>
+		    <include>generate-jetty-certificate.sh</include>
+		  </includes>
+		</source>
+	      </sources>
+	    </mapping>
+
+	    <mapping>
+	      <directory>${installation.dir}/</directory>
+	      <filemode>644</filemode>
+	      <username>root</username>
+	      <groupname>root</groupname>
+	      <directoryIncluded>false</directoryIncluded>
+	      <sources>
+		<source>
+		  <location>target/jetty-config</location>
+		  <includes>
+		    <include>**/*</include>
+		  </includes>
+		  <excludes>
+		    <exclude>etc/login/*</exclude>
+		    <exclude>etc/overrides/*</exclude>
+		  </excludes>
+		</source>
+	      </sources>
+	    </mapping>
+
+            <mapping>
+              <directory>${installation.dir}/</directory>
+              <filemode>644</filemode>
+              <username>root</username>
+              <groupname>root</groupname>
+              <directoryIncluded>false</directoryIncluded>
+              <sources>
+                <source>
+                  <location>target/dependency/jetty-distribution-${jetty.version}/</location>
+                  <includes>
+                    <include>*.txt</include>
+                    <include>*.html</include>
+                    <include>start.jar</include>
+                    <include>etc/**/*</include>
+                    <include>lib/**/*</include>
+                    <include>logs/**/*</include>
+                    <include>contexts/README.txt</include>
+                  </includes>
+                </source>
+              </sources>
+            </mapping>
+
+            <mapping>
+              <directory>/etc/rc.d/init.d/</directory>
+              <filemode>755</filemode>
+              <username>root</username>
+              <groupname>root</groupname>
+              <directoryIncluded>false</directoryIncluded>
+              <sources>
+                <source>
+                  <location>src/main/scripts</location>
+                  <includes>
+                    <include>marketplace</include>
+                  </includes>
+                </source>
+              </sources>
+            </mapping>
+
+          </mappings>
+        </configuration>
+      </plugin>
+
+    </plugins>
+
+  </build>
 
 </project>
diff --git a/server/jetty-rpm/src/main/jetty-config/contexts/jetty-marketplace.xml b/server/jetty-rpm/src/main/jetty-config/contexts/jetty-marketplace.xml
new file mode 100644
index 0000000..ae4063a
--- /dev/null
+++ b/server/jetty-rpm/src/main/jetty-config/contexts/jetty-marketplace.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0"?>
+<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
+
+<Configure id='wac' class="org.eclipse.jetty.webapp.WebAppContext">
+
+  <Set name="contextPath">/marketplace</Set>
+  <Set name="war"><SystemProperty name="jetty.home" default="."/>/webapps/${marketplace-war}</Set>
+<!--
+  <Set name="overrideDescriptor"><SystemProperty name="jetty.home" default="."/>/etc/overrides/web-cert.xml</Set>
+-->
+
+<!--
+  <Set name="securityHandler">
+    <New class="org.eclipse.jetty.security.ConstraintSecurityHandler">
+      <Set name="loginService">
+        <New class="org.eclipse.jetty.plus.jaas.JAASLoginService">
+          <Set name="name">StratusLab Certificate Realm</Set>
+          <Set name="loginModuleName">stratuslab-cert</Set>
+        </New>
+      </Set>
+    </New>
+  </Set>
+-->
+
+</Configure>
diff --git a/server/jetty-rpm/src/main/jetty-config/etc/jetty-stratuslab.xml b/server/jetty-rpm/src/main/jetty-config/etc/jetty-stratuslab.xml
index 254c9c5..b548ccc 100644
--- a/server/jetty-rpm/src/main/jetty-config/etc/jetty-stratuslab.xml
+++ b/server/jetty-rpm/src/main/jetty-config/etc/jetty-stratuslab.xml
@@ -32,22 +32,20 @@
     <!-- Set connectors                                              -->
     <!-- =========================================================== -->
 
-<!--
     <Call name="addConnector">
       <Arg>
           <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
             <Set name="host"><Property name="jetty.host" /></Set>
-            <Set name="port"><Property name="jetty.port" default="8080"/></Set>
+            <Set name="port"><Property name="jetty.port" default="8081"/></Set>
             <Set name="maxIdleTime">300000</Set>
             <Set name="Acceptors">2</Set>
             <Set name="statsOn">false</Set>
-            <Set name="confidentialPort">8443</Set>
+            <Set name="confidentialPort">8444</Set>
             <Set name="lowResourcesConnections">20000</Set>
             <Set name="lowResourcesMaxIdleTime">5000</Set>
           </New>
       </Arg>
     </Call>
--->
 
     <!-- =========================================================== -->
     <!-- Set handler Collection Structure                            --> 
diff --git a/server/jetty-rpm/src/main/jetty-config/start.ini b/server/jetty-rpm/src/main/jetty-config/start.ini
index e5bc353..fcdd16d 100644
--- a/server/jetty-rpm/src/main/jetty-config/start.ini
+++ b/server/jetty-rpm/src/main/jetty-config/start.ini
@@ -52,7 +52,7 @@ OPTIONS=Server,jsp,jmx,resources,websocket,ext,plus
 #   java -jar start.jar --help
 #-----------------------------------------------------------
 #etc/jetty-jmx.xml
-#etc/jetty-stratuslab.xml
+etc/jetty-stratuslab.xml
 #etc/jetty-ssl-stratuslab.xml
 #etc/jetty-jaas-stratuslab.xml
 # etc/jetty-ssl.xml
diff --git a/server/jetty-rpm/src/main/scripts/generate-jetty-certificate.sh b/server/jetty-rpm/src/main/scripts/generate-jetty-certificate.sh
new file mode 100755
index 0000000..aeb1681
--- /dev/null
+++ b/server/jetty-rpm/src/main/scripts/generate-jetty-certificate.sh
@@ -0,0 +1,71 @@
+#!/bin/bash
+
+JETTY_HOME=`dirname $0`
+JETTY_CERT=${JETTY_HOME}/jetty.jks
+
+# If certificate exists, then do nothing.
+if [ -f "${JETTY_CERT}" ]; then
+  exit 0;
+fi
+
+# File is needed for OpenSSL.
+RANDFILE=${JETTY_HOME}/.rnd
+touch ${RANDFILE}
+export RANDFILE
+
+cd ${JETTY_HOME}
+
+echo "Creating SSL certificate for Jetty..."
+
+# Get the full hostname of the machine.
+FULL_HOSTNAME=`hostname -f`
+
+cat > openssl.cfg <<EOF
+[ req ]
+distinguished_name     = req_distinguished_name
+x509_extensions        = v3_ca
+prompt                 = no
+input_password         = jettycred
+output_password        = jettycred
+
+dirstring_type = nobmp
+
+[ req_distinguished_name ]
+C = EU
+CN = ${FULL_HOSTNAME}
+
+[ v3_ca ]
+basicConstraints = CA:false
+nsCertType=client, email, objsign
+keyUsage=critical, digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment, keyAgreement
+subjectKeyIdentifier=hash
+authorityKeyIdentifier=keyid:always,issuer:always
+
+EOF
+
+# Generate initial private key.
+openssl genrsa -passout pass:jettycred -des3 -out test-key.pem 2048
+
+# Create a certificate signing request.
+openssl req -new -key test-key.pem -out test.csr -config openssl.cfg
+
+# Create (self-)signed certificate. 
+openssl x509 -req -days 365 -in test.csr -signkey test-key.pem \
+             -out test-cert.pem -extfile openssl.cfg -extensions v3_ca \
+             -passin pass:jettycred
+
+# Convert to PKCS12 format. 
+openssl pkcs12 -export -in test-cert.pem -inkey test-key.pem -out test.p12 \
+               -passin pass:jettycred -passout pass:jettycred
+
+# Import PKCS12 certificate/key into the java store.
+keytool -importkeystore \
+        -srckeystore test.p12 \
+        -srcstoretype pkcs12 \
+        -srcstorepass jettycred \
+        -destkeystore ${JETTY_CERT} \
+        -deststoretype jks \
+        -deststorepass jettycred
+
+# Remove intermediate files.
+rm -f openssl.cfg test-key.pem test.csr test-cert.pem
diff --git a/server/jetty-rpm/src/main/scripts/marketplace b/server/jetty-rpm/src/main/scripts/marketplace
new file mode 100755
index 0000000..b070ff2
--- /dev/null
+++ b/server/jetty-rpm/src/main/scripts/marketplace
@@ -0,0 +1,555 @@
+#!/usr/bin/env bash  
+#
+# Startup script for jetty under *nix systems (it works under NT/cygwin too).
+
+# To get the service to restart correctly on reboot, uncomment below (3 lines):
+# ========================
+# chkconfig: 3 99 99
+# description: Jetty 7 webserver
+# processname: jetty
+# ========================
+
+# Configuration files
+#
+# /etc/default/jetty
+#   If it exists, this is read at the start of script. It may perform any 
+#   sequence of shell commands, like setting relevant environment variables.
+#
+# $HOME/.jettyrc
+#   If it exists, this is read at the start of script. It may perform any 
+#   sequence of shell commands, like setting relevant environment variables.
+#
+# /etc/jetty.conf
+#   If found, and no configurations were given on the command line,
+#   the file will be used as this script's configuration. 
+#   Each line in the file may contain:
+#     - A comment denoted by the pound (#) sign as first non-blank character.
+#     - The path to a regular file, which will be passed to jetty as a 
+#       config.xml file.
+#     - The path to a directory. Each *.xml file in the directory will be
+#       passed to jetty as a config.xml file.
+#
+#   The files will be checked for existence before being passed to jetty.
+#
+# $JETTY_HOME/etc/jetty.xml
+#   If found, used as this script's configuration file, but only if
+#   /etc/jetty.conf was not present. See above.
+#   
+# Configuration variables
+#
+# JAVA
+#   Command to invoke Java. If not set, java (from the PATH) will be used.
+#
+# JAVA_OPTIONS
+#   Extra options to pass to the JVM
+#
+# JETTY_HOME
+#   Where Jetty is installed. If not set, the script will try go
+#   guess it by first looking at the invocation path for the script,
+#   and then by looking in standard locations as $HOME/opt/jetty
+#   and /opt/jetty. The java system property "jetty.home" will be
+#   set to this value for use by configure.xml files, f.e.:
+#
+#    <Arg><SystemProperty name="jetty.home" default="."/>/webapps/jetty.war</Arg>
+#
+# JETTY_PORT
+#   Override the default port for Jetty servers. If not set then the
+#   default value in the xml configuration file will be used. The java
+#   system property "jetty.port" will be set to this value for use in
+#   configure.xml files. For example, the following idiom is widely
+#   used in the demo config files to respect this property in Listener
+#   configuration elements:
+#
+#    <Set name="Port"><SystemProperty name="jetty.port" default="8080"/></Set>
+#
+#   Note: that the config file could ignore this property simply by saying:
+#
+#    <Set name="Port">8080</Set>
+#
+# JETTY_RUN
+#   Where the jetty.pid file should be stored. It defaults to the
+#   first available of /var/run, /usr/var/run, and /tmp if not set.
+#  
+# JETTY_PID
+#   The Jetty PID file, defaults to $JETTY_RUN/jetty.pid
+#   
+# JETTY_ARGS
+#   The default arguments to pass to jetty.
+#
+# JETTY_USER
+#   if set, then used as a username to run the server as
+#
+
+usage()
+{
+    echo "Usage: ${0##*/} [-d] {start|stop|run|restart|check|supervise} [ CONFIGS ... ] "
+    exit 1
+}
+
+[ $# -gt 0 ] || usage
+
+
+##################################################
+# Some utility functions
+##################################################
+findDirectory()
+{
+  local L OP=$1
+  shift
+  for L in "$@"; do
+    [ "$OP" "$L" ] || continue 
+    printf %s "$L"
+    break
+  done 
+}
+
+running()
+{
+  local PID=$(cat "$1" 2>/dev/null) || return 1
+  kill -0 "$PID" 2>/dev/null
+}
+
+readConfig()
+{
+  (( DEBUG )) && echo "Reading $1.."
+  source "$1"
+}
+
+
+
+##################################################
+# Get the action & configs
+##################################################
+CONFIGS=()
+NO_START=0
+DEBUG=0
+
+while [[ $1 = -* ]]; do
+  case $1 in
+    -d) DEBUG=1 ;;
+  esac
+  shift
+done
+ACTION=$1
+shift
+
+##################################################
+# Read any configuration files
+##################################################
+for CONFIG in /etc/default/jetty{,7} $HOME/.jettyrc; do
+  if [ -f "$CONFIG" ] ; then 
+    readConfig "$CONFIG"
+  fi
+done
+
+
+##################################################
+# Set tmp if not already set.
+##################################################
+TMPDIR=${TMPDIR:-/tmp}
+
+##################################################
+# Jetty's hallmark
+##################################################
+JETTY_INSTALL_TRACE_FILE="etc/jetty.xml"
+
+
+##################################################
+# Try to determine JETTY_HOME if not set
+##################################################
+if [ -z "$JETTY_HOME" ] 
+then
+  JETTY_SH=$0
+  case "$JETTY_SH" in
+    /*)   ;;
+    ./*)  ;;
+    *)    JETTY_SH=./$JETTY_SH ;;
+  esac
+  JETTY_HOME=${JETTY_SH%/*/*}
+
+  if [ ! -f "${JETTY_SH%/*/*}/$JETTY_INSTALL_TRACE_FILE" ]
+  then 
+    JETTY_HOME=
+  fi
+fi
+
+
+##################################################
+# if no JETTY_HOME, search likely locations.
+##################################################
+if [ -z "$JETTY_HOME" ] ; then
+  STANDARD_LOCATIONS=(
+        "/opt/stratuslab"
+        )
+  JETTY_DIR_NAMES=(
+        "marketplace"
+        )
+        
+  for L in "${STANDARD_LOCATIONS[@]}"
+  do
+    for N in "${JETTY_DIR_NAMES[@]}"
+    do
+      POSSIBLE_JETTY_HOME=("$L/"$N)
+      if [ ! -d "$POSSIBLE_JETTY_HOME" ]
+      then
+        # Not a directory. skip.
+        unset POSSIBLE_JETTY_HOME
+      elif [ ! -f "$POSSIBLE_JETTY_HOME/$JETTY_INSTALL_TRACE_FILE" ]
+      then
+        # Trace file not found. skip.
+        unset POSSIBLE_JETTY_HOME
+      else
+        # Good hit, Use it
+        JETTY_HOME=$POSSIBLE_JETTY_HOME
+        # Break out of JETTY_DIR_NAMES loop
+        break
+      fi
+    done
+    if [ -n "$POSSIBLE_JETTY_HOME" ]
+    then
+      # We have found our JETTY_HOME
+      # Break out of STANDARD_LOCATIONS loop
+      break
+    fi
+  done
+fi
+
+
+##################################################
+# No JETTY_HOME yet? We're out of luck!
+##################################################
+if [ -z "$JETTY_HOME" ]; then
+  echo "** ERROR: JETTY_HOME not set, you need to set it or install in a standard location" 
+  exit 1
+fi
+
+cd "$JETTY_HOME"
+JETTY_HOME=$PWD
+
+
+#####################################################
+# Check that jetty is where we think it is
+#####################################################
+if [ ! -r "$JETTY_HOME/$JETTY_INSTALL_TRACE_FILE" ] 
+then
+  echo "** ERROR: Oops! Jetty doesn't appear to be installed in $JETTY_HOME"
+  echo "** ERROR:  $JETTY_HOME/$JETTY_INSTALL_TRACE_FILE is not readable!"
+  exit 1
+fi
+
+##################################################
+# Try to find this script's configuration file,
+# but only if no configurations were given on the
+# command line.
+##################################################
+if [ -z "$JETTY_CONF" ] 
+then
+  if [ -f /etc/jetty.conf ]
+  then
+    JETTY_CONF=/etc/jetty.conf
+  elif [ -f "$JETTY_HOME/etc/jetty.conf" ]
+  then
+    JETTY_CONF=$JETTY_HOME/etc/jetty.conf
+  fi
+fi
+
+##################################################
+# Get the list of config.xml files from jetty.conf
+##################################################
+if [ -z "$CONFIGS" ] && [ -f "$JETTY_CONF" ] && [ -r "$JETTY_CONF" ] 
+then
+  while read -r CONF
+  do
+    if expr "$CONF" : '#' >/dev/null ; then
+      continue
+    fi
+
+    if [ -d "$CONF" ] 
+    then
+      # assume it's a directory with configure.xml files
+      # for example: /etc/jetty.d/
+      # sort the files before adding them to the list of CONFIGS
+      for file in "$CONF/"*.xml
+      do
+        if [ -r "$FILE" ] && [ -f "$FILE" ] 
+        then
+          CONFIGS+=("$FILE")
+        else
+          echo "** WARNING: Cannot read '$FILE' specified in '$JETTY_CONF'" 
+        fi
+      done
+    else
+      # assume it's a command line parameter (let start.jar deal with its validity)
+      CONFIGS+=("$CONF")
+    fi
+  done < "$JETTY_CONF"
+fi
+
+#####################################################
+# Find a location for the pid file
+#####################################################
+if [ -z "$JETTY_RUN" ] 
+then
+  JETTY_RUN=$(findDirectory -w /var/run /usr/var/run /tmp)
+fi
+
+#####################################################
+# Find a PID for the pid file
+#####################################################
+if [ -z "$JETTY_PID" ] 
+then
+  JETTY_PID="$JETTY_RUN/marketplace.pid"
+fi
+
+##################################################
+# Setup JAVA if unset
+##################################################
+if [ -z "$JAVA" ]
+then
+  JAVA=$(which java)
+fi
+
+if [ -z "$JAVA" ]
+then
+  echo "Cannot find a Java JDK. Please set either set JAVA or put java (>=1.5) in your PATH." 2>&2
+  exit 1
+fi
+
+#####################################################
+# See if JETTY_PORT is defined
+#####################################################
+if [ "$JETTY_PORT" ] 
+then
+  JAVA_OPTIONS+=("-Djetty.port=$JETTY_PORT")
+fi
+
+#####################################################
+# See if JETTY_LOGS is defined
+#####################################################
+if [ "$JETTY_LOGS" ]
+then
+  JAVA_OPTIONS+=("-Djetty.logs=$JETTY_LOGS")
+fi
+
+#####################################################
+# Are we running on Windows? Could be, with Cygwin/NT.
+#####################################################
+case "`uname`" in
+CYGWIN*) PATH_SEPARATOR=";";;
+*) PATH_SEPARATOR=":";;
+esac
+
+
+#####################################################
+# Add jetty properties to Java VM options.
+#####################################################
+JAVA_OPTIONS+=("-Djetty.home=$JETTY_HOME" "-Djava.io.tmpdir=$TMPDIR")
+
+[ -f "$JETTY_HOME/etc/start.config" ] && JAVA_OPTIONS=("-DSTART=$JETTY_HOME/etc/start.config" "${JAVA_OPTIONS[@]}")
+
+#####################################################
+# This is how the Jetty server will be started
+#####################################################
+
+JETTY_START=$JETTY_HOME/start.jar
+[ ! -f "$JETTY_START" ] && JETTY_START=$JETTY_HOME/lib/start.jar
+
+START_INI=$(dirname $JETTY_START)/start.ini
+[ -r "$START_INI" ] || START_INI=""
+
+RUN_ARGS=(${JAVA_OPTIONS[@]} -jar "$JETTY_START" $JETTY_ARGS "${CONFIGS[@]}")
+RUN_CMD=("$JAVA" ${RUN_ARGS[@]})
+
+#####################################################
+# Comment these out after you're happy with what 
+# the script is doing.
+#####################################################
+if (( DEBUG ))
+then
+  echo "JETTY_HOME     =  $JETTY_HOME"
+  echo "JETTY_CONF     =  $JETTY_CONF"
+  echo "JETTY_RUN      =  $JETTY_RUN"
+  echo "JETTY_PID      =  $JETTY_PID"
+  echo "JETTY_ARGS     =  $JETTY_ARGS"
+  echo "CONFIGS        =  ${CONFIGS[*]}"
+  echo "JAVA_OPTIONS   =  ${JAVA_OPTIONS[*]}"
+  echo "JAVA           =  $JAVA"
+  echo "RUN_CMD        =  ${RUN_CMD}"
+fi
+
+##################################################
+# Do the action
+##################################################
+case "$ACTION" in
+  start)
+    echo -n "Starting Jetty: "
+
+    if (( NO_START )); then 
+      echo "Not starting jetty - NO_START=1";
+      exit
+    fi
+
+    $JETTY_HOME/etc/generate-jetty-certificate.sh
+
+    if type start-stop-daemon > /dev/null 2>&1 
+    then
+      unset CH_USER
+      if [ -n "$JETTY_USER" ]
+      then
+        CH_USER="-c$JETTY_USER"
+      fi
+      if start-stop-daemon -S -p"$JETTY_PID" $CH_USER -d"$JETTY_HOME" -b -m -a "$JAVA" -- "${RUN_ARGS[@]}" --daemon
+      then
+        sleep 1
+        if running "$JETTY_PID"
+        then
+          echo "OK"
+        else
+          echo "FAILED"
+        fi
+      fi
+
+    else
+
+      if [ -f "$JETTY_PID" ]
+      then
+        if running $JETTY_PID
+        then
+          echo "Already Running!"
+          exit 1
+        else
+          # dead pid file - remove
+          rm -f "$JETTY_PID"
+        fi
+      fi
+
+      if [ "$JETTY_USER" ] 
+      then
+        touch "$JETTY_PID"
+        chown "$JETTY_USER" "$JETTY_PID"
+        # FIXME: Broken solution: wordsplitting, pathname expansion, arbitrary command execution, etc.
+        su - "$JETTY_USER" -c "
+          ${RUN_CMD[*]} --daemon &
+          disown \$!
+          echo \$! > '$JETTY_PID'"
+      else
+        "${RUN_CMD[@]}" &
+        disown $!
+        echo $! > "$JETTY_PID"
+      fi
+
+      echo "STARTED Jetty `date`" 
+    fi
+
+    ;;
+
+  stop)
+    echo -n "Stopping Jetty: "
+    if type start-stop-daemon > /dev/null 2>&1; then
+      start-stop-daemon -K -p"$JETTY_PID" -d"$JETTY_HOME" -a "$JAVA" -s HUP
+      
+      TIMEOUT=30
+      while running "$JETTY_PID"; do
+        if (( TIMEOUT-- == 0 )); then
+          start-stop-daemon -K -p"$JETTY_PID" -d"$JETTY_HOME" -a "$JAVA" -s KILL
+        fi
+
+        sleep 1
+      done
+
+      rm -f "$JETTY_PID"
+      echo OK
+    else
+      PID=$(cat "$JETTY_PID" 2>/dev/null)
+      kill "$PID" 2>/dev/null
+      
+      TIMEOUT=30
+      while running $JETTY_PID; do
+        if (( TIMEOUT-- == 0 )); then
+          kill -KILL "$PID" 2>/dev/null
+        fi
+
+        sleep 1
+      done
+
+      rm -f "$JETTY_PID"
+      echo OK
+    fi
+
+    ;;
+
+  restart)
+    JETTY_SH=$0
+    if [ ! -f $JETTY_SH ]; then
+      if [ ! -f $JETTY_HOME/bin/jetty.sh ]; then
+        echo "$JETTY_HOME/bin/jetty.sh does not exist."
+        exit 1
+      fi
+      JETTY_SH=$JETTY_HOME/bin/jetty.sh
+    fi
+
+    "$JETTY_SH" stop "$@"
+    "$JETTY_SH" start "$@"
+
+    ;;
+
+  supervise)
+    #
+    # Under control of daemontools supervise monitor which
+    # handles restarts and shutdowns via the svc program.
+    #
+    exec "${RUN_CMD[@]}"
+
+    ;;
+
+  run|demo)
+    echo "Running Jetty: "
+
+    if [ -f "$JETTY_PID" ]
+    then
+      if running "$JETTY_PID"
+      then
+        echo "Already Running!"
+        exit 1
+      else
+        # dead pid file - remove
+        rm -f "$JETTY_PID"
+      fi
+    fi
+
+    exec "${RUN_CMD[@]}"
+
+    ;;
+
+  check)
+    echo "Checking arguments to Jetty: "
+    echo "JETTY_HOME     =  $JETTY_HOME"
+    echo "JETTY_CONF     =  $JETTY_CONF"
+    echo "JETTY_RUN      =  $JETTY_RUN"
+    echo "JETTY_PID      =  $JETTY_PID"
+    echo "JETTY_PORT     =  $JETTY_PORT"
+    echo "JETTY_LOGS     =  $JETTY_LOGS"
+    echo "START_INI      =  $START_INI"
+    echo "CONFIGS        =  ${CONFIGS[*]}"
+    echo "JAVA_OPTIONS   =  ${JAVA_OPTIONS[*]}"
+    echo "JAVA           =  $JAVA"
+    echo "CLASSPATH      =  $CLASSPATH"
+    echo "RUN_CMD        =  ${RUN_CMD[*]}"
+    echo
+    
+    if [ -f "$JETTY_RUN/marketplace.pid" ]
+    then
+      echo "Jetty running pid=$(< "$JETTY_RUN/marketplace.pid")"
+      exit 0
+    fi
+    exit 1
+
+    ;;
+
+  *)
+    usage
+
+    ;;
+esac
+
+exit 0
-- 
1.7.4.1


From 8b49b077d011f229fdfa55c74194b9b0cbe7608f Mon Sep 17 00:00:00 2001
From: Charles LOOMIS <loomis@lal.in2p3.fr>
Date: Fri, 15 Apr 2011 13:04:32 +0200
Subject: [PATCH 2/2] working version

---
 server/jetty-rpm/src/main/scripts/jetty |  572 -------------------------------
 1 files changed, 0 insertions(+), 572 deletions(-)
 delete mode 100755 server/jetty-rpm/src/main/scripts/jetty

diff --git a/server/jetty-rpm/src/main/scripts/jetty b/server/jetty-rpm/src/main/scripts/jetty
deleted file mode 100755
index 429b63d..0000000
--- a/server/jetty-rpm/src/main/scripts/jetty
+++ /dev/null
@@ -1,572 +0,0 @@
-#!/usr/bin/env bash  
-#
-# Startup script for jetty under *nix systems (it works under NT/cygwin too).
-
-# To get the service to restart correctly on reboot, uncomment below (3 lines):
-# ========================
-# chkconfig: 3 99 99
-# description: Jetty 7 webserver
-# processname: jetty
-# ========================
-
-# Configuration files
-#
-# /etc/default/jetty
-#   If it exists, this is read at the start of script. It may perform any 
-#   sequence of shell commands, like setting relevant environment variables.
-#
-# $HOME/.jettyrc
-#   If it exists, this is read at the start of script. It may perform any 
-#   sequence of shell commands, like setting relevant environment variables.
-#
-# /etc/jetty.conf
-#   If found, and no configurations were given on the command line,
-#   the file will be used as this script's configuration. 
-#   Each line in the file may contain:
-#     - A comment denoted by the pound (#) sign as first non-blank character.
-#     - The path to a regular file, which will be passed to jetty as a 
-#       config.xml file.
-#     - The path to a directory. Each *.xml file in the directory will be
-#       passed to jetty as a config.xml file.
-#
-#   The files will be checked for existence before being passed to jetty.
-#
-# $JETTY_HOME/etc/jetty.xml
-#   If found, used as this script's configuration file, but only if
-#   /etc/jetty.conf was not present. See above.
-#   
-# Configuration variables
-#
-# JAVA
-#   Command to invoke Java. If not set, java (from the PATH) will be used.
-#
-# JAVA_OPTIONS
-#   Extra options to pass to the JVM
-#
-# JETTY_HOME
-#   Where Jetty is installed. If not set, the script will try go
-#   guess it by first looking at the invocation path for the script,
-#   and then by looking in standard locations as $HOME/opt/jetty
-#   and /opt/jetty. The java system property "jetty.home" will be
-#   set to this value for use by configure.xml files, f.e.:
-#
-#    <Arg><SystemProperty name="jetty.home" default="."/>/webapps/jetty.war</Arg>
-#
-# JETTY_PORT
-#   Override the default port for Jetty servers. If not set then the
-#   default value in the xml configuration file will be used. The java
-#   system property "jetty.port" will be set to this value for use in
-#   configure.xml files. For example, the following idiom is widely
-#   used in the demo config files to respect this property in Listener
-#   configuration elements:
-#
-#    <Set name="Port"><SystemProperty name="jetty.port" default="8080"/></Set>
-#
-#   Note: that the config file could ignore this property simply by saying:
-#
-#    <Set name="Port">8080</Set>
-#
-# JETTY_RUN
-#   Where the jetty.pid file should be stored. It defaults to the
-#   first available of /var/run, /usr/var/run, and /tmp if not set.
-#  
-# JETTY_PID
-#   The Jetty PID file, defaults to $JETTY_RUN/jetty.pid
-#   
-# JETTY_ARGS
-#   The default arguments to pass to jetty.
-#
-# JETTY_USER
-#   if set, then used as a username to run the server as
-#
-
-usage()
-{
-    echo "Usage: ${0##*/} [-d] {start|stop|run|restart|check|supervise} [ CONFIGS ... ] "
-    exit 1
-}
-
-[ $# -gt 0 ] || usage
-
-
-##################################################
-# Some utility functions
-##################################################
-findDirectory()
-{
-  local L OP=$1
-  shift
-  for L in "$@"; do
-    [ "$OP" "$L" ] || continue 
-    printf %s "$L"
-    break
-  done 
-}
-
-running()
-{
-  local PID=$(cat "$1" 2>/dev/null) || return 1
-  kill -0 "$PID" 2>/dev/null
-}
-
-readConfig()
-{
-  (( DEBUG )) && echo "Reading $1.."
-  source "$1"
-}
-
-
-
-##################################################
-# Get the action & configs
-##################################################
-CONFIGS=()
-NO_START=0
-DEBUG=0
-
-while [[ $1 = -* ]]; do
-  case $1 in
-    -d) DEBUG=1 ;;
-  esac
-  shift
-done
-ACTION=$1
-shift
-
-##################################################
-# Read any configuration files
-##################################################
-for CONFIG in /etc/default/jetty{,7} $HOME/.jettyrc; do
-  if [ -f "$CONFIG" ] ; then 
-    readConfig "$CONFIG"
-  fi
-done
-
-
-##################################################
-# Set tmp if not already set.
-##################################################
-TMPDIR=${TMPDIR:-/tmp}
-
-##################################################
-# Jetty's hallmark
-##################################################
-JETTY_INSTALL_TRACE_FILE="etc/jetty.xml"
-
-
-##################################################
-# Try to determine JETTY_HOME if not set
-##################################################
-if [ -z "$JETTY_HOME" ] 
-then
-  JETTY_SH=$0
-  case "$JETTY_SH" in
-    /*)   ;;
-    ./*)  ;;
-    *)    JETTY_SH=./$JETTY_SH ;;
-  esac
-  JETTY_HOME=${JETTY_SH%/*/*}
-
-  if [ ! -f "${JETTY_SH%/*/*}/$JETTY_INSTALL_TRACE_FILE" ]
-  then 
-    JETTY_HOME=
-  fi
-fi
-
-
-##################################################
-# if no JETTY_HOME, search likely locations.
-##################################################
-if [ -z "$JETTY_HOME" ] ; then
-  STANDARD_LOCATIONS=(
-        "/usr/share"
-        "/usr/share/java"
-        "${HOME}"
-        "${HOME}/src"
-        "${HOME}/opt"
-        "/opt"
-        "/java"
-        "/usr/local"
-        "/usr/local/share"
-        "/usr/local/share/java"
-        "/home"
-        )
-  JETTY_DIR_NAMES=(
-        "jetty-7"
-        "jetty7"
-        "jetty-7.*"
-        "jetty"
-        "Jetty-7"
-        "Jetty7"
-        "Jetty-7.*"
-        "Jetty"
-        )
-        
-  for L in "${STANDARD_LOCATIONS[@]}"
-  do
-    for N in "${JETTY_DIR_NAMES[@]}"
-    do
-      POSSIBLE_JETTY_HOME=("$L/"$N)
-      if [ ! -d "$POSSIBLE_JETTY_HOME" ]
-      then
-        # Not a directory. skip.
-        unset POSSIBLE_JETTY_HOME
-      elif [ ! -f "$POSSIBLE_JETTY_HOME/$JETTY_INSTALL_TRACE_FILE" ]
-      then
-        # Trace file not found. skip.
-        unset POSSIBLE_JETTY_HOME
-      else
-        # Good hit, Use it
-        JETTY_HOME=$POSSIBLE_JETTY_HOME
-        # Break out of JETTY_DIR_NAMES loop
-        break
-      fi
-    done
-    if [ -n "$POSSIBLE_JETTY_HOME" ]
-    then
-      # We have found our JETTY_HOME
-      # Break out of STANDARD_LOCATIONS loop
-      break
-    fi
-  done
-fi
-
-
-##################################################
-# No JETTY_HOME yet? We're out of luck!
-##################################################
-if [ -z "$JETTY_HOME" ]; then
-  echo "** ERROR: JETTY_HOME not set, you need to set it or install in a standard location" 
-  exit 1
-fi
-
-cd "$JETTY_HOME"
-JETTY_HOME=$PWD
-
-
-#####################################################
-# Check that jetty is where we think it is
-#####################################################
-if [ ! -r "$JETTY_HOME/$JETTY_INSTALL_TRACE_FILE" ] 
-then
-  echo "** ERROR: Oops! Jetty doesn't appear to be installed in $JETTY_HOME"
-  echo "** ERROR:  $JETTY_HOME/$JETTY_INSTALL_TRACE_FILE is not readable!"
-  exit 1
-fi
-
-##################################################
-# Try to find this script's configuration file,
-# but only if no configurations were given on the
-# command line.
-##################################################
-if [ -z "$JETTY_CONF" ] 
-then
-  if [ -f /etc/jetty.conf ]
-  then
-    JETTY_CONF=/etc/jetty.conf
-  elif [ -f "$JETTY_HOME/etc/jetty.conf" ]
-  then
-    JETTY_CONF=$JETTY_HOME/etc/jetty.conf
-  fi
-fi
-
-##################################################
-# Get the list of config.xml files from jetty.conf
-##################################################
-if [ -z "$CONFIGS" ] && [ -f "$JETTY_CONF" ] && [ -r "$JETTY_CONF" ] 
-then
-  while read -r CONF
-  do
-    if expr "$CONF" : '#' >/dev/null ; then
-      continue
-    fi
-
-    if [ -d "$CONF" ] 
-    then
-      # assume it's a directory with configure.xml files
-      # for example: /etc/jetty.d/
-      # sort the files before adding them to the list of CONFIGS
-      for file in "$CONF/"*.xml
-      do
-        if [ -r "$FILE" ] && [ -f "$FILE" ] 
-        then
-          CONFIGS+=("$FILE")
-        else
-          echo "** WARNING: Cannot read '$FILE' specified in '$JETTY_CONF'" 
-        fi
-      done
-    else
-      # assume it's a command line parameter (let start.jar deal with its validity)
-      CONFIGS+=("$CONF")
-    fi
-  done < "$JETTY_CONF"
-fi
-
-#####################################################
-# Find a location for the pid file
-#####################################################
-if [ -z "$JETTY_RUN" ] 
-then
-  JETTY_RUN=$(findDirectory -w /var/run /usr/var/run /tmp)
-fi
-
-#####################################################
-# Find a PID for the pid file
-#####################################################
-if [ -z "$JETTY_PID" ] 
-then
-  JETTY_PID="$JETTY_RUN/jetty.pid"
-fi
-
-##################################################
-# Setup JAVA if unset
-##################################################
-if [ -z "$JAVA" ]
-then
-  JAVA=$(which java)
-fi
-
-if [ -z "$JAVA" ]
-then
-  echo "Cannot find a Java JDK. Please set either set JAVA or put java (>=1.5) in your PATH." 2>&2
-  exit 1
-fi
-
-#####################################################
-# See if JETTY_PORT is defined
-#####################################################
-if [ "$JETTY_PORT" ] 
-then
-  JAVA_OPTIONS+=("-Djetty.port=$JETTY_PORT")
-fi
-
-#####################################################
-# See if JETTY_LOGS is defined
-#####################################################
-if [ "$JETTY_LOGS" ]
-then
-  JAVA_OPTIONS+=("-Djetty.logs=$JETTY_LOGS")
-fi
-
-#####################################################
-# Are we running on Windows? Could be, with Cygwin/NT.
-#####################################################
-case "`uname`" in
-CYGWIN*) PATH_SEPARATOR=";";;
-*) PATH_SEPARATOR=":";;
-esac
-
-
-#####################################################
-# Add jetty properties to Java VM options.
-#####################################################
-JAVA_OPTIONS+=("-Djetty.home=$JETTY_HOME" "-Djava.io.tmpdir=$TMPDIR")
-
-[ -f "$JETTY_HOME/etc/start.config" ] && JAVA_OPTIONS=("-DSTART=$JETTY_HOME/etc/start.config" "${JAVA_OPTIONS[@]}")
-
-#####################################################
-# This is how the Jetty server will be started
-#####################################################
-
-JETTY_START=$JETTY_HOME/start.jar
-[ ! -f "$JETTY_START" ] && JETTY_START=$JETTY_HOME/lib/start.jar
-
-START_INI=$(dirname $JETTY_START)/start.ini
-[ -r "$START_INI" ] || START_INI=""
-
-RUN_ARGS=(${JAVA_OPTIONS[@]} -jar "$JETTY_START" $JETTY_ARGS "${CONFIGS[@]}")
-RUN_CMD=("$JAVA" ${RUN_ARGS[@]})
-
-#####################################################
-# Comment these out after you're happy with what 
-# the script is doing.
-#####################################################
-if (( DEBUG ))
-then
-  echo "JETTY_HOME     =  $JETTY_HOME"
-  echo "JETTY_CONF     =  $JETTY_CONF"
-  echo "JETTY_RUN      =  $JETTY_RUN"
-  echo "JETTY_PID      =  $JETTY_PID"
-  echo "JETTY_ARGS     =  $JETTY_ARGS"
-  echo "CONFIGS        =  ${CONFIGS[*]}"
-  echo "JAVA_OPTIONS   =  ${JAVA_OPTIONS[*]}"
-  echo "JAVA           =  $JAVA"
-  echo "RUN_CMD        =  ${RUN_CMD}"
-fi
-
-##################################################
-# Do the action
-##################################################
-case "$ACTION" in
-  start)
-    echo -n "Starting Jetty: "
-
-    if (( NO_START )); then 
-      echo "Not starting jetty - NO_START=1";
-      exit
-    fi
-
-    $JETTY_HOME/etc/generate-jetty-certificate.sh
-
-    if type start-stop-daemon > /dev/null 2>&1 
-    then
-      unset CH_USER
-      if [ -n "$JETTY_USER" ]
-      then
-        CH_USER="-c$JETTY_USER"
-      fi
-      if start-stop-daemon -S -p"$JETTY_PID" $CH_USER -d"$JETTY_HOME" -b -m -a "$JAVA" -- "${RUN_ARGS[@]}" --daemon
-      then
-        sleep 1
-        if running "$JETTY_PID"
-        then
-          echo "OK"
-        else
-          echo "FAILED"
-        fi
-      fi
-
-    else
-
-      if [ -f "$JETTY_PID" ]
-      then
-        if running $JETTY_PID
-        then
-          echo "Already Running!"
-          exit 1
-        else
-          # dead pid file - remove
-          rm -f "$JETTY_PID"
-        fi
-      fi
-
-      if [ "$JETTY_USER" ] 
-      then
-        touch "$JETTY_PID"
-        chown "$JETTY_USER" "$JETTY_PID"
-        # FIXME: Broken solution: wordsplitting, pathname expansion, arbitrary command execution, etc.
-        su - "$JETTY_USER" -c "
-          ${RUN_CMD[*]} --daemon &
-          disown \$!
-          echo \$! > '$JETTY_PID'"
-      else
-        "${RUN_CMD[@]}" &
-        disown $!
-        echo $! > "$JETTY_PID"
-      fi
-
-      echo "STARTED Jetty `date`" 
-    fi
-
-    ;;
-
-  stop)
-    echo -n "Stopping Jetty: "
-    if type start-stop-daemon > /dev/null 2>&1; then
-      start-stop-daemon -K -p"$JETTY_PID" -d"$JETTY_HOME" -a "$JAVA" -s HUP
-      
-      TIMEOUT=30
-      while running "$JETTY_PID"; do
-        if (( TIMEOUT-- == 0 )); then
-          start-stop-daemon -K -p"$JETTY_PID" -d"$JETTY_HOME" -a "$JAVA" -s KILL
-        fi
-
-        sleep 1
-      done
-
-      rm -f "$JETTY_PID"
-      echo OK
-    else
-      PID=$(cat "$JETTY_PID" 2>/dev/null)
-      kill "$PID" 2>/dev/null
-      
-      TIMEOUT=30
-      while running $JETTY_PID; do
-        if (( TIMEOUT-- == 0 )); then
-          kill -KILL "$PID" 2>/dev/null
-        fi
-
-        sleep 1
-      done
-
-      rm -f "$JETTY_PID"
-      echo OK
-    fi
-
-    ;;
-
-  restart)
-    JETTY_SH=$0
-    if [ ! -f $JETTY_SH ]; then
-      if [ ! -f $JETTY_HOME/bin/jetty.sh ]; then
-        echo "$JETTY_HOME/bin/jetty.sh does not exist."
-        exit 1
-      fi
-      JETTY_SH=$JETTY_HOME/bin/jetty.sh
-    fi
-
-    "$JETTY_SH" stop "$@"
-    "$JETTY_SH" start "$@"
-
-    ;;
-
-  supervise)
-    #
-    # Under control of daemontools supervise monitor which
-    # handles restarts and shutdowns via the svc program.
-    #
-    exec "${RUN_CMD[@]}"
-
-    ;;
-
-  run|demo)
-    echo "Running Jetty: "
-
-    if [ -f "$JETTY_PID" ]
-    then
-      if running "$JETTY_PID"
-      then
-        echo "Already Running!"
-        exit 1
-      else
-        # dead pid file - remove
-        rm -f "$JETTY_PID"
-      fi
-    fi
-
-    exec "${RUN_CMD[@]}"
-
-    ;;
-
-  check)
-    echo "Checking arguments to Jetty: "
-    echo "JETTY_HOME     =  $JETTY_HOME"
-    echo "JETTY_CONF     =  $JETTY_CONF"
-    echo "JETTY_RUN      =  $JETTY_RUN"
-    echo "JETTY_PID      =  $JETTY_PID"
-    echo "JETTY_PORT     =  $JETTY_PORT"
-    echo "JETTY_LOGS     =  $JETTY_LOGS"
-    echo "START_INI      =  $START_INI"
-    echo "CONFIGS        =  ${CONFIGS[*]}"
-    echo "JAVA_OPTIONS   =  ${JAVA_OPTIONS[*]}"
-    echo "JAVA           =  $JAVA"
-    echo "CLASSPATH      =  $CLASSPATH"
-    echo "RUN_CMD        =  ${RUN_CMD[*]}"
-    echo
-    
-    if [ -f "$JETTY_RUN/jetty.pid" ]
-    then
-      echo "Jetty running pid=$(< "$JETTY_RUN/jetty.pid")"
-      exit 0
-    fi
-    exit 1
-
-    ;;
-
-  *)
-    usage
-
-    ;;
-esac
-
-exit 0
-- 
1.7.4.1

